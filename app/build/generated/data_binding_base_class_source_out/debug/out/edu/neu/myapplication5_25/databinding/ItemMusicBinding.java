// Generated by view binder compiler. Do not edit!
package edu.neu.myapplication5_25.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.neu.myapplication5_25.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMusicBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivMusicIcon;

  @NonNull
  public final ImageButton ivPlayIcon;

  @NonNull
  public final TextView tvMusicArtist;

  @NonNull
  public final TextView tvMusicDuration;

  @NonNull
  public final TextView tvMusicTitle;

  private ItemMusicBinding(@NonNull CardView rootView, @NonNull ImageView ivMusicIcon,
      @NonNull ImageButton ivPlayIcon, @NonNull TextView tvMusicArtist,
      @NonNull TextView tvMusicDuration, @NonNull TextView tvMusicTitle) {
    this.rootView = rootView;
    this.ivMusicIcon = ivMusicIcon;
    this.ivPlayIcon = ivPlayIcon;
    this.tvMusicArtist = tvMusicArtist;
    this.tvMusicDuration = tvMusicDuration;
    this.tvMusicTitle = tvMusicTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMusicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMusicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_music, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMusicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_music_icon;
      ImageView ivMusicIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivMusicIcon == null) {
        break missingId;
      }

      id = R.id.iv_play_icon;
      ImageButton ivPlayIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivPlayIcon == null) {
        break missingId;
      }

      id = R.id.tv_music_artist;
      TextView tvMusicArtist = ViewBindings.findChildViewById(rootView, id);
      if (tvMusicArtist == null) {
        break missingId;
      }

      id = R.id.tv_music_duration;
      TextView tvMusicDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvMusicDuration == null) {
        break missingId;
      }

      id = R.id.tv_music_title;
      TextView tvMusicTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvMusicTitle == null) {
        break missingId;
      }

      return new ItemMusicBinding((CardView) rootView, ivMusicIcon, ivPlayIcon, tvMusicArtist,
          tvMusicDuration, tvMusicTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
