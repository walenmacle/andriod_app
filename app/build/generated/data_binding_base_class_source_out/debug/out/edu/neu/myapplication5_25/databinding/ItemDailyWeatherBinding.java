// Generated by view binder compiler. Do not edit!
package edu.neu.myapplication5_25.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.neu.myapplication5_25.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDailyWeatherBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ivWeatherIcon;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvMaxTemp;

  @NonNull
  public final TextView tvMinTemp;

  @NonNull
  public final TextView tvWeatherDescription;

  private ItemDailyWeatherBinding(@NonNull CardView rootView, @NonNull ImageView ivWeatherIcon,
      @NonNull TextView tvDate, @NonNull TextView tvMaxTemp, @NonNull TextView tvMinTemp,
      @NonNull TextView tvWeatherDescription) {
    this.rootView = rootView;
    this.ivWeatherIcon = ivWeatherIcon;
    this.tvDate = tvDate;
    this.tvMaxTemp = tvMaxTemp;
    this.tvMinTemp = tvMinTemp;
    this.tvWeatherDescription = tvWeatherDescription;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDailyWeatherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDailyWeatherBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_daily_weather, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDailyWeatherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_weather_icon;
      ImageView ivWeatherIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivWeatherIcon == null) {
        break missingId;
      }

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_max_temp;
      TextView tvMaxTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvMaxTemp == null) {
        break missingId;
      }

      id = R.id.tv_min_temp;
      TextView tvMinTemp = ViewBindings.findChildViewById(rootView, id);
      if (tvMinTemp == null) {
        break missingId;
      }

      id = R.id.tv_weather_description;
      TextView tvWeatherDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvWeatherDescription == null) {
        break missingId;
      }

      return new ItemDailyWeatherBinding((CardView) rootView, ivWeatherIcon, tvDate, tvMaxTemp,
          tvMinTemp, tvWeatherDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
