// Generated by view binder compiler. Do not edit!
package edu.neu.myapplication5_25.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.neu.myapplication5_25.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCitySelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonBack;

  @NonNull
  public final ImageButton buttonClearSearch;

  @NonNull
  public final EditText editTextSearch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewCities;

  @NonNull
  public final TextView textCityCount;

  @NonNull
  public final TextView textNoResults;

  private FragmentCitySelectionBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton buttonBack, @NonNull ImageButton buttonClearSearch,
      @NonNull EditText editTextSearch, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerViewCities, @NonNull TextView textCityCount,
      @NonNull TextView textNoResults) {
    this.rootView = rootView;
    this.buttonBack = buttonBack;
    this.buttonClearSearch = buttonClearSearch;
    this.editTextSearch = editTextSearch;
    this.progressBar = progressBar;
    this.recyclerViewCities = recyclerViewCities;
    this.textCityCount = textCityCount;
    this.textNoResults = textNoResults;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCitySelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCitySelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_city_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCitySelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_back;
      ImageButton buttonBack = ViewBindings.findChildViewById(rootView, id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.button_clear_search;
      ImageButton buttonClearSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonClearSearch == null) {
        break missingId;
      }

      id = R.id.edit_text_search;
      EditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycler_view_cities;
      RecyclerView recyclerViewCities = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCities == null) {
        break missingId;
      }

      id = R.id.text_city_count;
      TextView textCityCount = ViewBindings.findChildViewById(rootView, id);
      if (textCityCount == null) {
        break missingId;
      }

      id = R.id.text_no_results;
      TextView textNoResults = ViewBindings.findChildViewById(rootView, id);
      if (textNoResults == null) {
        break missingId;
      }

      return new FragmentCitySelectionBinding((LinearLayout) rootView, buttonBack,
          buttonClearSearch, editTextSearch, progressBar, recyclerViewCities, textCityCount,
          textNoResults);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
